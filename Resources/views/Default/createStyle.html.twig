{% extends "GuiBundle::base.html.twig" %}
{% block stylesheets %}
    <link href="{{ asset('bundles/gui/css/colorpicker.css') }}" rel="stylesheet">
{% endblock %}
{% block headline %}Create Style{% endblock %}
{% block content %}
    <!-- Top Toolbar -->
    <form id="less-import-form" name="less-import-form" method="post" action="{{ path('guiImportLessVariables') }}" enctype="multipart/form-data">
        <nav class="navbar navbar-default" role="navigation">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-colors-navbar-collapse-3">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#">Options</a>
                </div>
                <div class="collapse navbar-collapse" id="bs-colors-navbar-collapse-3">
                    <ul class="nav navbar-nav">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">Themes <span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                                <li><a href="javascript:resetLessVariables('Default')">Default</a></li>
                                <li class="divider"></li>
                                {% for theme in themes %}
                                <li><a href="javascript:resetLessVariables('{{ theme }}')">{{ theme }}</a></li>
                                {% endfor %}
                            </ul>
                        </li>
                    </ul>
                    &nbsp;
                    <input id="filebutton" style="float:left;" name="file" onchange="submit()" type="file" class="filestyle btn" data-buttonText="Import Vars" data-classIcon="glyphicon glyphicon-import" data-input="false" data-classbutton="btn btn-default" value="Import Vars">
                    <a href="{{ path('guiDownloadLessVariables') }}" target="_blank" type="button" class="btn btn-default navbar-btn"><span class="glyphicon glyphicon-export"></span> Export Vars</a>
                    <button type="button" onclick="resetLessVariables()" class="btn btn-danger navbar-btn"><span class="glyphicon glyphicon-repeat"></span> Reset</button>
                    <button type="button" class="btn btn-primary navbar-btn" onclick="saveCss()"><span class="glyphicon glyphicon-floppy-disk"></span> Apply to website</button>
                </div>
            </div>
        </nav>
    </form>

    <!-- Variables form -->
    <form id="less-form" role="form" method="post" action="{{ path('guiApplyLessVariables') }}">
        {{ output|raw }}
    </form>
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('bundles/gui/js/bootstrap-colorpicker.js') }}" type="text/javascript"></script>
    <link rel="stylesheet/less" type="text/css" href="{{ asset('bundles/gui/less/bootstrap/bootstrap.less') }}" />
    <script>
        less = {
            env: "development",
            async: false,
            fileAsync: false,
            poll: 1000,
            functions: {},
            dumpLineNumbers: "comments",
            relativeUrls: false,
            rootpath: ""
        };
    </script>
    <script src="{{ asset('bundles/gui/js/less/less-1.7.4.min.js') }}" type="text/javascript"></script>
    <script>

        var lessVariables = {};

        $("#less-form :input").blur(function() {
            lessVariables[$(this).attr('name')] = $(this).val();
            less.modifyVars(lessVariables);

            var name = $(this).attr('name').slice(1);

            $('#color-' + name).css('background-color', $(this).val());

            // save changes to variables.less
            $.post( "{{ path('guiApplyLessVariables') }}", $( "#less-form" ).serialize());
        });

        $(".colorpicker").colorpicker();

        $('.colorpicker').on('hide', function(ev){
            lessVariables[ev.target.firstChild.name] = ev.color.toHex();
            less.modifyVars(lessVariables);

            // save changes to variables.less
            $.post( "{{ path('guiApplyLessVariables') }}", $( "#less-form" ).serialize());
        });

        function resetLessVariables(theme)
        {
            if (typeof(theme) == 'undefined') theme='';
            if (confirm('Theme reset will lost your current style settings!'))
            {
                $.post( "{{ path('guiResetLessVariables') }}", {'theme': theme}).done(function(){location.reload();});
            }
        }

        function importLessVariables()
        {
            /*
            $.post( "{{ path('guiImportLessVariables') }}", $("#less-import-form").serialize()).done(function(data){
                //location.reload();
                alert(data);
            });*/

            var formObj = $("#less-import-form");
            var formURL = '{{ path('guiImportLessVariables') }}';
            var formData = new FormData(formObj);
            $.ajax({
                url: formURL,
                type: 'POST',
                data:  formData,
                mimeType:"multipart/form-data",
                contentType: false,
                cache: false,
                processData:false,
                success: function(data, textStatus, jqXHR)
                {
                    alert('OK: ' + data);

                },
                error: function(jqXHR, textStatus, errorThrown)
                {
                    alert('Error');
                }
            });

        }

        function saveCss()
        {
            var parser = new(less.Parser)({
                paths: ['{{ asset('bundles/gui/less/bootstrap/') }}'],
                filename: 'bootstrap.less'
            });

            $.post("{{ path('guiGetBootstrapLess') }}").done(function(data){
                parser.parse(data, function (err, tree) {
                    if (err) { alert(err); return console.error(err) }
                    var css = tree.toCSS({ compress: true });
                    //console.log(css)
                    $.post("{{ path('guiSaveBootstrapCss') }}", {'css': css}).done(function(data){
                        alert(data);
                    });
                });
            });
        }
    </script>
{% endblock %}