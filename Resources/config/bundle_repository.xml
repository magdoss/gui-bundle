<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<repository>
    <bundle>
        <title>User Management (FOSUserBundle)</title>
        <category>Authentication</category>
        <url>https://github.com/FriendsOfSymfony/FOSUserBundle</url>
        <!-- Url or base64 encoded image 120x100 px -->
        <icon></icon>
        <bundleName>FOSUserBundle</bundleName>
        <bundlePath>friendsofsymfony/user-bundle</bundlePath>
        <bundleVersion>~2.0@dev</bundleVersion>
        <routingEntry></routingEntry>
        <kernelEntry>new FOS\UserBundle\FOSUserBundle()</kernelEntry>
        <description>
            The Symfony2 security component provides a flexible security framework that allows you to load users from configuration, a database, or anywhere else you can imagine.
            The FOSUserBundle builds on top of this to make it quick and easy to store users in a database.
            So, if you need to persist and fetch the users in your system to and from a database, this is the right bundle.
        </description>
    </bundle>
    <bundle>
        <title>HTTP Client (GuzzleBundle)</title>
        <category>Data Interface</category>
        <url>https://github.com/misd-service-development/guzzle-bundle</url>
        <!-- Url or base64 encoded image 120x100 px -->
        <icon></icon>
        <bundleName>GuzzleBundle</bundleName>
        <bundlePath>misd/guzzle-bundle</bundlePath>
        <bundleVersion>~1.0</bundleVersion>
        <routingEntry></routingEntry>
        <kernelEntry>new Misd\GuzzleBundle\MisdGuzzleBundle()</kernelEntry>
        <description>
            This bundle integrates Guzzle into your Symfony2 application, which takes the pain out of sending HTTP requests and the redundancy out of creating web service clients.
            It can also integrate with the JMSSerializerBundle for easy object (de)serialization, and provides a param converter for use with the SensioFrameworkExtraBundle.
        </description>
    </bundle>
</repository>