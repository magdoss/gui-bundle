<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<repository>
  <!--
  /**
   * A small example how what you can do if you add a new repository
   */

  /**
   * The bundle root node
   */
  <bundle>

    /**
     * The tile for the bundle
     */
    <title>Example Bundle</title>

    /**
     * The category of bundle
     */
    <category>Example</category>

    /**
     * The URL of this bundle
     */
    <url>https://www.google.de</url>

    /**
     * The Url or base64 encoded image 120x100 px
     */
    <icon></icon>

    /**
     * The correct bundle name. The bundle name must end with "Bundle"
     */
    <bundleName>ExampleBundle</bundleName>

    /**
     * The relative bundle installation path
     */
    <bundlePath>example/example-bundle</bundlePath>

    /**
     * The version of this bundle
     */
    <bundleVersion>~99.99@dev</bundleVersion>

    /**
     * The routing entry. For more information about the routing look into the routing*.yml file.
     * At this time we support only this three properties of routing.
     */
    <routingEntry>
      <name>_example</name>
      <resource>@ExampleBundle/Controller/</resource>
      <type>annotation</type>
      <prefix>/example</prefix>
    </routingEntry>

    /**
     * The kernel entry. If you need more information about this look into the AppKernel.php
     */
    <kernelEntry>new Example\ExampleBundle\ExampleBundle()</kernelEntry>

    /**
     * The description of this repository
     */
    <description>
      Example to demonstrate the power of bundle installation.
    </description>
  </bundle>
  -->

    <!-- FOS User Bundle -->
  <bundle>
        <title>User Management (FOSUserBundle)</title>
        <category>Authentication</category>
        <url>https://github.com/FriendsOfSymfony/FOSUserBundle</url>
        <!-- Url or base64 encoded image 120x100 px -->
        <icon></icon>
        <bundleName>FOSUserBundle</bundleName>
        <bundlePath>friendsofsymfony/user-bundle</bundlePath>
        <bundleNamespace>FOS\UserBundle</bundleNamespace>
        <bundleVersion>~2.0@dev</bundleVersion>
        <routingEntry></routingEntry>
        <configuration>
            <fos_user>
                <db_driver>orm</db_driver>
                <firewall_name>main</firewall_name>
                <user_class>FOS\\UserBundle\\Entity\\User</user_class>
            </fos_user>
        </configuration>
        <description>
            <![CDATA[
                The Symfony2 security component provides a flexible security framework that allows you to load users from configuration, a database, or anywhere else you can imagine.
                The FOSUserBundle builds on top of this to make it quick and easy to store users in a database.<br/>So, if you need to persist and fetch the users in your system to and from a database, this is the right bundle.
            ]]>
        </description>
      <installNotes>
          <![CDATA[
                <h2>Configuration</h2>
                Setup the configuration, firewall and your own user class (see <a href="https://github.com/FriendsOfSymfony/FOSUserBundle/blob/master/Resources/doc/index.md" target="_blank">Documentation</a> started from Step 3).

                <strong># app/config/config.yml</strong>
                fos_user:
                &nbsp;&nbsp;&nbsp;&nbsp; db_driver: orm
                &nbsp;&nbsp;&nbsp;&nbsp; firewall_name: main
                &nbsp;&nbsp;&nbsp;&nbsp; user_class: YourCompany\YourBundle\Entity\User
            ]]>
      </installNotes>
    </bundle>

    <!-- Misd Guzzle Bundle -->
    <bundle>
        <title>HTTP Client (GuzzleBundle)</title>
        <category>Data Interface</category>
        <url>https://github.com/misd-service-development/guzzle-bundle</url>
        <!-- Url or base64 encoded image 120x100 px -->
        <icon></icon>
        <bundleName>MisdGuzzleBundle</bundleName>
        <bundlePath>misd/guzzle-bundle</bundlePath>
        <bundleNamespace>Misd\GuzzleBundle</bundleNamespace>
        <bundleVersion>~1.0</bundleVersion>
        <routingEntry></routingEntry>
        <description>
            <![CDATA[
                This bundle integrates Guzzle into your Symfony2 application, which takes the pain out of sending HTTP requests and the redundancy out of creating web service clients.
                It can also integrate with the JMSSerializerBundle for easy object (de)serialization, and provides a param converter for use with the SensioFrameworkExtraBundle.
            ]]>
        </description>
    </bundle>

    <!-- Knp Snappy Bundle -->
    <bundle>
        <title>PDF Generator (KnpSnappyBundle)</title>
        <category>Converter Tools</category>
        <url>https://github.com/KnpLabs/KnpSnappyBundle</url>
        <!-- Url or base64 encoded image 120x100 px -->
        <icon></icon>
        <bundleName>KnpSnappyBundle</bundleName>
        <bundlePath>knplabs/knp-snappy-bundle</bundlePath>
        <bundleNamespace>Knp\Bundle\SnappyBundle</bundleNamespace>
        <bundleVersion>dev-master</bundleVersion>
        <routingEntry></routingEntry>
        <configuration>
            <knp_snappy>
                <pdf>
                    <enabled>true</enabled>
                    <binary>/usr/local/bin/wkhtmltopdf</binary>
                    <options>[]</options>
                </pdf>
                <image>
                    <enabled>true</enabled>
                    <binary>/usr/local/bin/wkhtmltopdf</binary>
                    <options>[]</options>
                </image>
            </knp_snappy>
        </configuration>
        <description>
            <![CDATA[
                Easily create PDF and images in Symfony2 by converting html using webkit. Snappy is a PHP (5.3+) wrapper for the wkhtmltopdf conversion utility. It allows you to generate either pdf or image files from your html documents, using the webkit engine.
                The KnpSnappyBundle provides a simple integration for your Symfony project.<br/><br/><strong>PLEASE NOTE:</strong> You need installed binaries from <a href="http://wkhtmltopdf.org/" target="_blank">http://wkhtmltopdf.org/</a>
            ]]>
        </description>
        <installNotes>
            <![CDATA[
                <h2>Configuration</h2>
                Setup the following configuration part in your config.yml file. Set the correct path to wkhtmltopdf in your environment.

                <strong># app/config/config.yml</strong>
                knp_snappy:
                &nbsp;&nbsp;&nbsp;&nbsp; pdf:
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled:    true
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; binary:     /usr/local/bin/wkhtmltopdf
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options:    []
                &nbsp;&nbsp;&nbsp;&nbsp; image:
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enabled:    true
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; binary:     /usr/local/bin/wkhtmltoimage
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; options:    []
            ]]>
        </installNotes>
    </bundle>

    <!-- Rss Atom Bundle -->
    <bundle>
        <title>RSS Atom Feed Bundle</title>
        <category>Data Interface</category>
        <url>https://github.com/alexdebril/rss-atom-bundle</url>
        <!-- Url or base64 encoded image 120x100 px -->
        <icon></icon>
        <bundleName>DebrilRssAtomBundle</bundleName>
        <bundlePath>debril/rss-atom-bundle</bundlePath>
        <bundleNamespace>Debril\RssAtomBundle</bundleNamespace>
        <bundleVersion>~1.3</bundleVersion>
        <routingEntry></routingEntry>
        <description>
            <![CDATA[
                RssAtomBundle is a Bundle for Symfony 2 made to easily access and deliver RSS / Atom feeds. It features:<br/><br/>

                - Detection of the feed format (RSS / Atom)<br/>
                - A generic StreamController built to write all your feeds. This controller is able to send a 304 HTTP Code if the feed didn't change since the last visit<br/>
                - HTTP Headers support when reading feeds in order to save network traffic<br/>
                - Content filtering to fetch only the newest items<br/>
                - multiple feeds writing<br/>
                - Ability to use doctrine as a data source<br/>
                - All classes are heavily tested using PHPUnit.
            ]]>
        </description>
    </bundle>

    <!-- FOS Rest Bundle -->
    <bundle>
        <title>REST Webservice (FOSRestBundle)</title>
        <category>Webservice</category>
        <url>https://github.com/FriendsOfSymfony/FOSRestBundle</url>
        <!-- Url or base64 encoded image 120x100 px -->
        <icon></icon>
        <bundleName>FOSRestBundle</bundleName>
        <bundlePath>friendsofsymfony/rest-bundle</bundlePath>
        <bundleNamespace>FOS\RestBundle</bundleNamespace>
        <bundleVersion>~1.4</bundleVersion>
        <routingEntry></routingEntry>
        <description>
            <![CDATA[
                This bundle provides various tools to rapidly develop RESTful API's & applications with Symfony2.<br/><br/>
                - A View layer to enable output and format agnostic Controllers<br/>
                - A custom route loader to generate url's following REST conventions<br/>
                - Accept header format negotiation including handling for custom mime types<br/>
                - RESTful decoding of HTTP request body and Accept headers<br/>
                - Exception controller for sending appropriate HTTP status codes
            ]]>
        </description>
    </bundle>

</repository>